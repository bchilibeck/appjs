// Generated by CoffeeScript 1.3.3
(function() {
  var heroIcon, moveHero, updateInfo;

  $(function() {
    var iconToDownload, lastScrollTop, noun, slug;
    heroIcon();
    $('#icon').css({
      'opacity': 1
    });
    if ($('#download-complete.just_purchased').length > 0) {
      iconToDownload = $('#download-complete').data('icon');
      setTimeout("_gaq.push(['_trackEvent', 'Sales', 'Purchased', 'Purchased Item'])", 500);
      window.location = '/download/zipped/svg_' + iconToDownload + '.zip';
      noun = $('h1.noun-name').text();
      slug = $('h1.noun-name').data('slug');
      $('#download-complete').delay(2000).fadeOut(800).queue(function() {
        return $('body').removeClass('just-purchased');
      });
    }
    if ($('body.download-PD').length > 0) {
      iconToDownload = $('#download-complete').data('dwn-icon');
      window.location = '/download/zipped/svg_' + iconToDownload + '.zip';
    }
    if ($('body.download-CCBY').length > 0) {
      $(this).delay(200).queue(function() {
        return $('.download.focus-link').click();
      });
    }
    $('#download-complete').bind('click', function(e) {
      e.preventDefault();
      return $(this).fadeOut(800).delay(800).queue(function() {
        $('#download-complete').fadeOut();
        return $('body').removeClass('just-purchased');
      });
    });
    $('.download.button.authenticated').bind('click', function() {
      var downloadedIcon;
      _gaq.push(['_trackEvent', 'Download', 'Download-Click', 'Download Click']);
      if ($(this).live().hasClass('focus-link')) {

      } else {
        noun = $('h1.noun-name').text();
        slug = $('h1.noun-name').data('slug');
        downloadedIcon = $('#icon-container .current').attr('id').replace('icon-', '');
        $('#download-complete').show().delay(2000).queue(function() {
          _gaq.push(['_trackEvent', 'Download', 'File-Transaction-Download', 'File Transaction Download']);
          $(this).dequeue();
          return $('#download-complete').fadeOut(800).delay(800).queue(function() {
            $('body').removeClass('just-purchased');
            return $(this).dequeue();
          });
        });
        if (typeof _lnq !== 'undefined') {
          return _lnq.push([
            "_logEvent", {
              name: "downloaded:icon",
              note: noun + ' #' + downloadedIcon,
              external_identifier: downloadedIcon
            }
          ]);
        }
      }
    });
    $('.buy.button').on('click', function() {
      return _gaq.push(['_trackEvent', 'Sales', 'Buy-Attempt-Project-Page', 'Buy attempt on a product page']);
    });
    $('nav li').bind('click', function(e) {
      var currentIndex, direction;
      currentIndex = $('#icon-container .current').index();
      currentIndex = currentIndex + 1;
      direction = $(this).data('direction');
      if (direction === 'previous') {
        moveHero(currentIndex - 1);
      } else if (direction === 'next') {
        moveHero(currentIndex + 1);
      } else {

      }
      return e.preventDefault();
    });
    $('#other-icons a').bind('click', function(e) {
      var iconIndex;
      e.preventDefault();
      iconIndex = $(this).parent('li').index();
      moveHero(iconIndex + 1, true);
      return $('html, body').animate({
        scrollTop: 0
      }, {
        duration: 1000,
        easing: 'easeOutQuart'
      });
    });
    lastScrollTop = 0;
    return $(window).bind('scroll', function(event) {
      var currentHidden, otherIconsOffset, scroll, scrollDirection, st;
      st = $(this).scrollTop();
      if (st > lastScrollTop) {
        scrollDirection = 'down';
        $('html, body').stop(true, false);
      } else {
        scrollDirection = 'up';
      }
      lastScrollTop = st;
      if (window.pageYOffset) {
        scroll = window.pageYOffset;
      } else {
        scroll = document.body.scrollTop;
      }
      currentHidden = $('#other-icons .icons').css('top');
      currentHidden = parseInt(currentHidden);
      otherIconsOffset = $('#other-icons').offset().top;
      if (currentHidden + scroll < 0 && scrollDirection === 'down') {
        $('#other-icons .icons').css({
          'top': currentHidden + scroll
        });
        $('.hidden-rows').removeClass('show').html('');
      }
      if (currentHidden + scroll > 0 && scrollDirection === 'down') {
        currentHidden = 0;
        $('#other-icons .icons').css({
          'top': currentHidden
        });
        return $('.hidden-rows').removeClass('show').html('');
      }
    });
  });

  heroIcon = function(currentIndex) {
    var calcWidth, footerHeight, heroHeight, iconFromUrl, iconFromUrlIndex, iconOffset, numberOfIcons, otherIconsHeight, windowHeight;
    $('#icon').height('auto');
    windowHeight = $(window).height();
    iconOffset = $('#icon-container').offset().top;
    footerHeight = $('#under-icon').outerHeight();
    otherIconsHeight = $('#other-icons .icons>.icon:first-child').outerHeight();
    calcWidth = windowHeight - iconOffset - footerHeight - otherIconsHeight - 30;
    if (calcWidth < 200) {
      calcWidth = 200;
    }
    if (calcWidth > 500) {
      calcWidth = 500;
    }
    numberOfIcons = $('#icon-inner-container>li').length;
    $('#icon-container>svg').live().attr('width', '100%').attr('height', '100%');
    $('#icon-container').height(calcWidth).width(calcWidth + 200);
    $('#icon-inner-container>li').height(calcWidth).width(calcWidth);
    $('#icon-inner-container>li .icon').height(calcWidth).width(calcWidth);
    $('#icon-inner-container').width(numberOfIcons * calcWidth);
    heroHeight = $('#icon').outerHeight();
    $('#icon').outerHeight(heroHeight - 13);
    iconFromUrl = parseInt(document.location.hash.replace('#icon-No', ''), 10);
    iconFromUrlIndex = parseInt($('#icon-' + iconFromUrl).index() + 1);
    if (isNaN(iconFromUrl)) {
      if (currentIndex) {
        return moveHero(currentIndex);
      } else {
        return updateInfo(1);
      }
    } else {
      return moveHero(iconFromUrlIndex);
    }
  };

  $(window).bind('hashchange', function(e) {
    var iconFromUrl, iconFromUrlIndex;
    iconFromUrl = parseInt(document.location.hash.replace('#icon-No', ''), 10);
    iconFromUrlIndex = parseInt($('#icon-' + iconFromUrl).index() + 1);
    if ($('#icon-container li:nth-child(' + iconFromUrlIndex + ')').hasClass('current')) {

    } else {
      return moveHero(iconFromUrlIndex);
    }
  });

  moveHero = function(iconIndex, hideRows) {
    var adjust, dots, hiddenRows, i, iconWidth, ifOthersVisable, numberOfIcons, rowHeight;
    iconIndex = iconIndex;
    hideRows = hideRows;
    numberOfIcons = $('#icon-inner-container>li').length;
    iconWidth = $('#icon-inner-container>li:first-child').width();
    if (iconIndex > numberOfIcons) {
      iconIndex = 1;
    }
    if (iconIndex < -1) {
      iconIndex = 1;
    }
    if (iconIndex === 0) {
      iconIndex = numberOfIcons;
    }
    hiddenRows = Math.floor(iconIndex / 12.1);
    rowHeight = $('#other-icons .icon:first-child').outerHeight(true);
    adjust = hiddenRows * rowHeight;
    ifOthersVisable = $('#other-icons').offset().top + (rowHeight * 2);
    if (document.body.scrollTop < 25 || hideRows === true) {
      if ($(window).height() <= ifOthersVisable) {
        $('#other-icons .icons').css({
          'top': -adjust
        });
      } else {
        $('#other-icons .icons').css({
          'top': 0
        });
      }
    }
    setTimeout(function() {
      return $('#icon-container').animate({
        'opacity': 1
      });
    }, 1000);
    if (hiddenRows === 0) {
      $('.hidden-rows').removeClass('show').html('');
    } else if (document.body.scrollTop < 25 && hiddenRows !== 0) {
      i = 1;
      dots = '•';
      while (i < hiddenRows) {
        dots = dots + ' •';
        i++;
      }
      $('.hidden-rows').addClass('show').html(dots);
    }
    $('#icon-container .current').removeClass('current');
    $('#other-icons .current').removeClass('current');
    $('#icon-container li:nth-child(' + iconIndex + ')').addClass('current');
    $('#other-icons li:nth-child(' + iconIndex + ')').addClass('current');
    iconIndex = iconIndex - 1;
    $('#icon-inner-container').css({
      'left': -(iconWidth * iconIndex)
    });
    return updateInfo(iconIndex + 1);
  };

  updateInfo = function(iconIndex) {
    var $downloadButton, icon, iconActions, index, indexAttribute, indexAvailable, indexCampaignLink, indexCollaborator, indexDesigner, indexDesignerURL, indexFavorite, indexID, indexLicense, indexLicenseID, indexLicenseURL, indexLocation, indexProductID, indexSponsorLogo, indexTags, indexYear, indexZipped, noun, slug, tag, tags, _i, _len, _ref;
    icon = $('#icon');
    index = $('#icon-container li:nth-child(' + iconIndex + ')');
    iconActions = icon.find('#icon-actions');
    indexID = index.attr('id').replace('icon-', '');
    indexZipped = index.data('zipped');
    indexDesigner = index.data('designer');
    indexCollaborator = index.data('collaborators');
    indexDesignerURL = index.data('designer-url');
    indexLocation = index.data('location');
    indexYear = index.data('year');
    indexAttribute = index.data('attributeas');
    indexLicense = index.data('license');
    indexLicenseID = index.data('license-id');
    indexLicenseURL = index.data('license-url');
    indexTags = index.data('tags');
    indexFavorite = index.live().data('favorite');
    indexAvailable = index.data('available');
    indexProductID = index.data('product-id');
    indexSponsorLogo = index.data('sponsor');
    indexCampaignLink = index.data('sponsor-campaign-link');
    noun = $('h1.noun-name').text();
    slug = $('h1.noun-name').data('slug');
    if (indexSponsorLogo && indexID !== "uploadYourOwn") {
      $('#designer, #designer + dd').hide();
      $('#sponsor').show();
      $('#sponsor + dd').show().html('<a target="_blank" href="' + indexCampaignLink + '"><img src="http://cdn.thenounproject.com/site_media/' + indexSponsorLogo + '" /></a>');
      $('footer .sponsor-link').css({
        'opacity': 1
      });
    } else {
      $('#sponsor').hide();
      $('#sponsor + dd').html('').hide();
      $('footer .sponsor-link').css({
        'opacity': 0
      });
    }
    $downloadButton = $('.download.button');
    $downloadButton.data('icon', indexID);
    $downloadButton.data('noun', slug);
    $downloadButton.data('license', indexLicense);
    $downloadButton.data('designer', indexDesigner);
    if (typeof _lnq !== 'undefined' && indexID !== "uploadYourOwn") {
      _lnq.push([
        "_logEvent", {
          name: "viewed:icon",
          note: '#' + indexID + ' ' + noun,
          external_identifier: index.attr('id')
        }
      ]);
    }
    if (indexFavorite) {
      $('#icon-actions .icon-favorite a').removeAttr('class').addClass(indexFavorite).attr('data-icon-id', indexID);
    } else {
      $('#icon-actions .icon-favorite a').removeAttr('class');
    }
    if (indexLicenseID === 1) {
      if (indexAvailable === 'available') {
        $('.download.button.authenticated').addClass('focus-link').attr('href', '/agreement/' + indexID);
        $('.buy.button').show().attr('href', '/purchase/' + indexProductID);
        iconActions.removeAttr('class').addClass('ccby-for-sale');
      } else if (indexAvailable === 'purchased') {
        $('.download.button.authenticated').removeClass('focus-link').attr('href', indexZipped);
        iconActions.removeAttr('class').addClass('ccby-purchased');
      } else {
        $('.download.button.authenticated').addClass('focus-link').attr('href', '/agreement/' + indexID);
        $downloadButton.data('focus', 'something');
        iconActions.removeAttr('class').addClass('ccby-not-for-sale');
      }
    } else {
      $('.download.button.authenticated').removeClass('focus-link').attr('href', indexZipped);
      $('.buy.button').removeClass('ccby').addClass('pd').hide().attr('href', '');
      iconActions.removeAttr('class').addClass('public-domain');
    }
    if (indexDesigner && indexDesigner !== 'Unknown Designer' && !indexSponsorLogo) {
      $('#designer, #designer + dd').css({
        'display': 'inline-block'
      });
      if (indexDesignerURL !== '#not-active') {
        $('#designer + dd').html(' <a href="/' + indexDesignerURL + '">' + indexDesigner + '</a>');
      } else {
        $('#designer + dd').html(' ' + indexDesigner);
      }
    } else if (indexDesigner === 'Unknown Designer') {
      $('#designer').css({
        'display': 'inline-block'
      });
      $('#designer + dd').html(' ' + indexDesigner);
    } else {
      $('#designer').hide();
      $('#designer + dd').html('\u00A0');
    }
    if (indexCollaborator) {
      $('#designer, #designer + dd').show();
      $('#collaborator').css({
        'display': 'inline-block'
      }).find('+ dd').html(indexCollaborator);
    } else {
      $('#collaborator').hide().find('+ dd').hide().html('\u00A0');
    }
    if (indexAttribute && !indexSponsorLogo) {
      $('#attribute').show().find('dd').html(indexAttribute);
    } else {
      $('#attribute').hide().find('dd').html('\u00A0');
    }
    if (indexLocation && indexLocation !== 'undefined' && !indexSponsorLogo) {
      $('#location + dd').show().html(indexLocation);
    } else {
      $('#location + dd').hide().html('');
    }
    if (indexYear && indexYear !== 'Unknown' && !indexSponsorLogo) {
      $('#year + dd').show().html(indexYear);
    } else {
      $('#year + dd').hide().html('\u00A0');
    }
    if (indexLicense) {
      $('.license-text').html(indexLicense);
      $('.license-icons').attr('href', indexLicenseURL);
      if (indexLicenseID === 1 || indexLicenseID === 4) {
        $('.license').find('.publicdomain').hide();
        $('.license').find('.creativecommons').show();
      }
      if (indexLicenseID === 3) {
        $('.license').find('.creativecommons').hide();
        $('.license').find('.publicdomain').show();
      }
    } else {
      $('.license-text').html('\u00A0');
      $('.license-icons').removeClass('pd').removeClass('ccby');
      $('.license').find('.publicdomain, .creativecommons').hide();
      icon.removeClass('purchase');
    }
    if (indexTags) {
      $('#tags + dd').html('');
      _ref = indexTags.split(',');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tag = _ref[_i];
        tags = tags + '<a href="">' + tag + '</a>';
        $('#tags + dd').html(tags);
      }
    } else {
      $('#tags + dd').html('');
    }
    if (indexID === "uploadYourOwn") {
      iconActions.hide();
      return document.location.hash = '';
    } else {
      iconActions.fadeIn();
      return document.location.hash = "icon-No" + indexID;
    }
  };

  $(window).resize(function() {
    var currentIndex;
    $('#icon-container').css({
      'opacity': 0
    });
    currentIndex = $('#icon-container .current').index();
    currentIndex = currentIndex + 1;
    return heroIcon(currentIndex);
  });

  $(document).keydown(function(e) {
    var currentIndex, numberOfIcons;
    if (e.keyCode === 17 || e.keyCode === 91 || e.keyCode === 9 || e.metaKey || $('.suggest').length > 0) {

    } else {
      currentIndex = $('#icon-container .current').index();
      currentIndex = currentIndex + 1;
      if ($('body').hasClass('focus-active')) {

      } else {
        if (e.keyCode === 37) {
          return moveHero(currentIndex - 1);
        } else if (e.keyCode === 39) {
          return moveHero(currentIndex + 1);
        } else if (e.keyCode === 38) {
          e.preventDefault();
          return moveHero(currentIndex - 12);
        } else if (e.keyCode === 40) {
          numberOfIcons = $('#icon-inner-container>li').length;
          e.preventDefault();
          if (currentIndex + 12 > numberOfIcons) {
            return moveHero(numberOfIcons);
          } else {
            return moveHero(currentIndex + 12);
          }
        }
      }
    }
  });

}).call(this);
